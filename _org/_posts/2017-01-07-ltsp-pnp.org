#+TITLE:     LTSP Server with Ubuntu 16.04
#+AUTHOR:    Dashamir Hoxha
#+EMAIL:     dashohoxha@gmail.com
#+DATE:      2017-01-07
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+OPTIONS:   TeX:nil LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
# #+INFOJS_OPT: view:overview toc:t ltoc:t mouse:#aadddd buttons:0 path:js/org-info.js
#+STYLE: <link rel="stylesheet" type="text/css" href="css/org-info.css" />
#+begin_html
---
layout:     post
title:      LTSP Server with Ubuntu 16.04
date:       2017-01-07
summary:    LTSP allows computers of a LAN to boot through network from a single server.
    One of the benefits of this is for example to cut down the
    administration and maintenance time of a classroom of computers
    (instead of installing, configuring and updating each of them we do it
    only once).
tags:       [ltsp ubuntu edubuntu]
---
#+end_html

* Introduction

  LTSP allows computers of a LAN to boot through network from a single
  server.  One of the benefits of this is for example to cut down the
  administration and maintenance time of a classroom of computers
  (instead of installing, configuring and updating each of them, we do
  it only once).

  Some details about how it works are described in this article (in
  case that you are curious):
  https://ubuntuforums.org/showthread.php?t=2173749

  The [[https://www.edubuntu.org/documentation/ltsp-live][Edubuntu LTSP Live]] is the most easy way to run a classroom with
  Edubuntu LTSP.  But it is a bit outdated (based on ubuntu-14.04).
  However it is not so difficult to build a LTSP server with the
  latest Ubuntu desktop.

  In my case, all the clients are decent machines with 2GB RAM, and
  the server is just like them, so I decided to follow the [[https://help.ubuntu.com/community/UbuntuLTSP/ltsp-pnp][ltsp-pnp]]
  approach for fat clients, which is also the most easy to
  implement. In this method the server is used as a template for the
  clients, so that almost all the programs, configurations, users,
  etc. that are installed on the server will be made available to the
  clients as well (through the network).

  Also, the gateway/router of the LAN provides automatic network
  configuration (DHCP) as well, so I don't have to and I don't want to
  introduce another DHCP server on the LAN (which may potentially be a
  source of network problems).


* Preparing the server

  I started by making a standard installation of [[https://linuxmint.com/download.php][LinuxMint 18.3 Xfce]]
  on the server PC, followed by some standard updates/customizations,
  like:
  #+begin_example
  apt-get update
  apt-get upgrade
  apt-get install chromium-browser
  etc.
  #+end_example

  I tried to install all the programs/tools that should be available
  on the clients. In particular, one of them is =epoptes=, which
  allows remote desktop control for the clients:
  #+begin_example
  apt-get install epoptes epoptes-client
  gpasswd -a ${SUDO_USER:-$USER} epoptes
  #+end_example

  Then, I set a fixed IP address to the server by adding these lines
  to ~/etc/network/interfaces~:
  #+begin_example
  auto enp0s8
  iface enp0s8 inet static
      address 192.168.1.10
      netmask 255.255.255.0
      gateway 192.168.1.1
      dns-nameservers 8.8.8.8 8.8.4.4

  #+end_example


* Installing LTSP

** Install packages

   I installed the package =ltsp-server= (not
   =ltsp-server-standalone=) and the other related packages:
   #+begin_example
   apt-get --yes --install-recommends install \
       dnsmasq ltsp-server ltsp-client ldm-ubuntu-theme
   #+end_example

** Update kernels

   #+begin_example
   echo 'IPAPPEND=3' >> /etc/ltsp/update-kernels.conf
   /usr/share/ltsp/update-kernels
   #+end_example


** Create lts.conf

   The command:
   #+begin_example
   ltsp-config lts.conf
   #+end_example
   creates the file ~/var/lib/tftpboot/ltsp/i386/lts.conf~ or
   ~/var/lib/tftpboot/ltsp/amd64/lts.conf~ (depending on the
   architecture of the server). I did not customize it.


** Configure dnsmasq

    The command:
    #+begin_example
    ltsp-config dnsmasq
    #+end_example
    creates the configuration file
    ~/etc/dnsmasq.d/ltsp-server-dnsmasq.conf~.

    I had to fix a few things in it:
     - I don't want this server to give IP configuration (DHCP),
       so I commented out this line:
       **dhcp-range=192.168.67.20,192.168.67.250,8h**
     - The line **port=0** breaks the name resolution (DNS) in Ubuntu-16.04,
       so I commented it out as well.

    Then restart =dnsmasq=:
    #+begin_example
    update-rc.d dnsmasq enable
    service dnsmasq restart
    #+end_example

    *Note:* If you don't have a DHCP server on your network, then
    don't comment the *dhcp-range* above. But make sure that the fixed
    IP (set in the previous section) and the DHCP range are in the
    same network (for example =address 192.168.11.1= and
    =dhcp-range=192.168.11.50,192.168.11.100=).


* Creating the client image

  The command:
  #+begin_example
  ltsp-update-image --cleanup /
  #+end_example
  generates the client image.  It may take some time.

  When it is finished you can start booting clients from the network.
  This is usually done by pressing F12 when the computer is just
  powered on, but it may be different on different
  computers. Sometimes you may need to enable booting from network on
  the BIOS (it is usually called PXE booting).


* Installing Edubuntu programs

  Edubuntu programs can be installed like this:
  #+begin_example
  apt-get install edubuntu-desktop
  #+end_example

  Or like this:
  #+begin_example
  apt-get install \
      ubuntu-edu-preschool \
      ubuntu-edu-primary \
      ubuntu-edu-secondary \
      ubuntu-edu-tertiary
  #+end_example

  The first one installs everything about Edubuntu, including the
  desktop, how it looks etc. The second method installs only the
  additional educational software that usually comes with Edubuntu,
  without changing the existing desktop etc. I prefer the second way
  because it is more flexible (for example I would like to skip the
  preschool tools, which are mainly games for small children).

  Now that we have installed new packages, we have to update the image
  as well, in order to make these changes available to the clients. It
  is the same command as before:
  #+begin_example
  ltsp-update-image --cleanup /
  #+end_example


* Installing additional desktops

  In Linux we can install several desktops and let the user choose
  which one he prefers.  For example [[https://www.tecmint.com/install-mate-desktop-in-ubuntu-fedora/][this article]] shows how to install
  the MATE desktop. They can also be installed by installing the
  packages *xubuntu-desktop*, *lubuntu-desktop*, *kubuntu-desktop* etc. Then
  you need to update the client image again.

  *Attention:* When you install another desktop, it is possible that it
  may replace the Display Manager (the login window) with another
  one. Make sure that you always keep *lightdm* as display manager, not
  something else (for example *mdm*), because somehow it doesn't work
  with *mdm.*


* Adding more users

  All the users of the server can also login from each of the clients.
  So, to add more users we just add them on the server. No need to
  update the client image on this case. Also, everything that the
  users change is saved on the home directories on the server.


* References

 + https://ubuntuforums.org/showthread.php?t=2173749
 + https://help.ubuntu.com/community/UbuntuLTSP/ltsp-pnp
 + https://help.ubuntu.com/community/UbuntuLTSP/FatClients
 + https://jonathancarter.org/2010/11/24/how-do-ltsp-fat-clients-work/
 + http://www.m-opensolutions.com/?p=537
